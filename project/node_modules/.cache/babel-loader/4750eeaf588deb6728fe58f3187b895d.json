{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uCC44\\uB9B0\\\\Desktop\\\\management\\\\shopping-mall\\\\project\\\\src\\\\pages\\\\Login\\\\template\\\\logincontents.js\";\nimport React from \"react\";\nimport \"../css/logincontents.css\";\nimport { Link } from \"react-router-dom\";\nconst A = [1, 23, 4, 5, 6, 7, 8];\n\nfunction LoginContents() {\n  function getInfo() {\n    let loginId = document.querySelector(\".login-id\");\n    let loginIdValue = loginId.value;\n    let USER_INFO = \"userInfo\";\n    let loadInfo = localStorage.getItem(USER_INFO);\n    let parseInfo = JSON.parse(loadInfo);\n    let filtered = parseInfo.filter(element => element.Id === loginIdValue); // filtered가 빈배열의 값을 가지면 alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\")\n\n    filtered;\n    let filteredPw = filtered[0].Pw;\n    let loginPw = document.querySelector(\".login-pw\");\n    let loginPwValue = loginPw.value;\n    loginPwValue === filteredPw ? alert(`${filtered[0].Id}님 환영합니다.`) : alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\n  }\n\n  function checkPw() {\n    let loginPw = document.querySelector(\".login-pw\");\n    let loginPwValue = loginPw.value;\n\n    if (loginPwValue === \"\") {\n      alert(\"비밀번호를 입력해주세요.\");\n    } else {\n      getInfo();\n    }\n  }\n\n  function checkId() {\n    let loginId = document.querySelector(\".login-id\");\n    let loginIdValue = loginId.value;\n\n    if (loginIdValue === \"\") {\n      alert(\"아이디를 입력해주세요.\");\n    } else {\n      checkPw();\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"wrap lg_contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    className: \"lg-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"ID\",\n    className: \"login-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"PASSWORD\",\n    className: \"login-pw\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"bt-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: checkId,\n    className: \"bt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(Link, {\n    to: \"/join\",\n    className: \"bt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sign Up\")))));\n}\n\nexport default LoginContents;","map":{"version":3,"sources":["C:/Users/김채린/Desktop/management/shopping-mall/project/src/pages/Login/template/logincontents.js"],"names":["React","Link","A","LoginContents","getInfo","loginId","document","querySelector","loginIdValue","value","USER_INFO","loadInfo","localStorage","getItem","parseInfo","JSON","parse","filtered","filter","element","Id","filteredPw","Pw","loginPw","loginPwValue","alert","checkPw","checkId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../css/logincontents.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst A = [1,23,4,5,6,7,8];\r\nfunction LoginContents(){\r\n\r\n  function getInfo(){\r\n    let loginId = document.querySelector(\".login-id\");\r\n    let loginIdValue = loginId.value;\r\n\r\n    let USER_INFO = \"userInfo\";\r\n    \r\n    let loadInfo = localStorage.getItem(USER_INFO);\r\n    let parseInfo = JSON.parse(loadInfo);\r\n\r\n    \r\n    let filtered = parseInfo.filter(element => element.Id === loginIdValue) ;\r\n    \r\n    // filtered가 빈배열의 값을 가지면 alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\")\r\n    filtered \r\n    \r\n    let filteredPw = filtered[0].Pw;\r\n\r\n    let loginPw = document.querySelector(\".login-pw\");\r\n    let loginPwValue = loginPw.value;\r\n\r\n    loginPwValue === filteredPw ? alert(`${filtered[0].Id}님 환영합니다.`) : alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n    \r\n  }\r\n\r\n  function checkPw(){\r\n    let loginPw = document.querySelector(\".login-pw\");\r\n    let loginPwValue = loginPw.value;\r\n    \r\n    if(loginPwValue === \"\") {\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n    }\r\n    else {\r\n      getInfo();\r\n    }\r\n  }\r\n\r\n  function checkId(){\r\n    let loginId = document.querySelector(\".login-id\");\r\n    let loginIdValue = loginId.value;\r\n    \r\n    if(loginIdValue === \"\") {\r\n      alert(\"아이디를 입력해주세요.\");\r\n    }\r\n    else {\r\n      checkPw();\r\n    }\r\n  }\r\n \r\n  return(\r\n    <>\r\n      <div className=\"wrap lg_contents\">\r\n        <div className=\"container\">\r\n          <h3 className=\"title\">Login</h3>\r\n          <div className=\"lg-box\">\r\n            <input type=\"text\" placeholder=\"ID\" className=\"login-id\"/>\r\n            <input type=\"password\" placeholder=\"PASSWORD\" className=\"login-pw\"/>\r\n          </div>\r\n\r\n          <div className=\"bt-box\">\r\n            <button type=\"button\" onClick={checkId} className=\"bt\">\r\n              Sign In\r\n            </button>\r\n            <Link to=\"/join\" className=\"bt\">\r\n              Sign Up\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginContents;"]},"metadata":{},"sourceType":"module"}